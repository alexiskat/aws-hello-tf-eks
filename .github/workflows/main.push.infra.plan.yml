name: infra.branch.push

on:
  push:
    branches-ignore:    
      # Push event on feature branch only
      - main
    paths:
      - infra/01-composition/eu-west-01/**
      - infra/02-module/**
      - infra/03-resource/**
#    tags:
#      - "dev-infra-plan"
#      - "dev-infra-apply"
permissions:
  id-token: write # required to use OIDC authentication
  contents: read # required to checkout the code from the repo

env:
  TF_MODULE_PATH: infra/01-composition/eu-west-01/dev
  ENV_NAME: dev
  AWS_REGION: eu-west-1

jobs:
  tf-plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_MODULE_PATH }}

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_TFA_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_TFA_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure Terraform v0.15.4
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.15.4
          terraform_wrapper: false

      - name: Check Terraform fmt
        run: |
          terraform fmt -diff -check -recursive
        shell: bash
        working-directory: ${{ env.TF_MODULE_PATH }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: latest
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run TFLint
        run: |
          tflint --version
          tflint -f compact
        working-directory: ${{ env.TF_MODULE_PATH }}

      - name: Terraform Init
        run: |
          terraform init -input=false -backend=true -backend-config="env/${{ env.ENV_NAME }}/backend.tfvars"
        shell: bash
        working-directory: ${{ env.TF_MODULE_PATH }}

      - name: Terraform Validate
        run: |
          terraform validate
        working-directory: ${{ env.TF_MODULE_PATH }}
        shell: bash

      - name: Terraform Plan
        if: ${{ github.ref == 'refs/tags/dev-infra-plan' }}
        run: |
          terraform plan -input=false -var-file="env/${{ env.ENV_NAME }}/terraform.tfvars"
        shell: bash
        working-directory: ${{ env.TF_MODULE_PATH }}

      - name: Terraform Security Scan
        uses: triat/terraform-security-scan@v3.0.0
        with:
          tfsec_actions_working_dir: ${{ env.TF_MODULE_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Apply
        if: ${{ github.ref == 'refs/tags/dev-infra-apply' }}
        run: |
          terraform apply -input=false -auto-approve -var-file="env/${{ env.ENV_NAME }}/terraform.tfvars"
        shell: bash
        working-directory: ${{ env.TF_MODULE_PATH }}
